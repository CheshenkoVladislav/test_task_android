apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.vlad.alphatest"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", 'IMAGE_SERVICE_HOST' , "\"${project.IMAGE_SERVICE_HOST_ADDRESS}\""
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

def butterknife_version = "8.8.1"
def glide_version = "4.8.0"
def dagger_version = "2.16"
def rxjava2_version = "2.1.13"
def rxjava2_android_version = "2.0.2"
def timber_version = "4.7.0"
def firebase_core = "16.0.6"
def firebase_storage = "16.0.5"
def firebase_database = "16.0.5"
def retrofit_version = "2.5.0"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    /**
     * Tests
     */
    testImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.4'
    testImplementation 'com.google.truth:truth:0.42'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.10.0'
    testImplementation 'org.assertj:assertj-core:3.8.0'
    testImplementation 'org.robolectric:robolectric:3.5.1'
    testImplementation 'org.robolectric:shadows-multidex:3.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.github.fabioCollini.daggermock:daggermock:0.8.4'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'




    /**
     * ButterKnife
     */
    implementation "com.jakewharton:butterknife:${butterknife_version}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife_version}"


    /**
     *  Dagger 2
     *  see http://google.github.io/dagger
     */
    implementation "com.google.dagger:dagger:${dagger_version}"
    annotationProcessor "com.google.dagger:dagger-compiler:${dagger_version}"
    implementation "com.google.dagger:dagger-android-support:${dagger_version}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${dagger_version}"

    /**
     * Glide
     */
    implementation "com.github.bumptech.glide:glide:${glide_version}"

    /**
     * Picasso
     */
    implementation 'com.squareup.picasso:picasso:2.71828'

    /**
     * RX Java 2
     */

    implementation "io.reactivex.rxjava2:rxjava:${rxjava2_version}",
            "io.reactivex.rxjava2:rxandroid:${rxjava2_android_version}"

    /**
     * RxBus
     */
//    implementation 'com.github.MFlisar:RxBus2:0.1'

    /**
     * Timber logger
     */
    implementation "com.jakewharton.timber:timber:${timber_version}"

    /**
     * Firebase
     */
    implementation "com.google.firebase:firebase-core:${firebase_core}"
    implementation "com.google.firebase:firebase-storage:${firebase_storage}"
    implementation "com.google.firebase:firebase-database:${firebase_database}"

    /**
     * RxFirebase
     */
    implementation 'com.github.FrangSierra:RxFirebase:1.5.6'

    /**
     * Retrofit
     */
    implementation "com.squareup.retrofit2:retrofit:${retrofit_version}"
    //Rx
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    //HttpLoggingInterceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    //Gson
    implementation "com.squareup.retrofit2:converter-gson:${retrofit_version}"

    /**
     * Parceler
     */

    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'

}
